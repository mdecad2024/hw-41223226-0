<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cad2024 電腦輔助設計與實習</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Intro_to_Mechatronics.pdf">Intro_to_Mechatronics.pdf</a> (<a href="http://engineering.nyu.edu/mechatronics/Control_Lab/bck/VKapila/Intro2EngLect/">Source</a>)</p>
<p style="padding-left: 30px;"><a href="https://pythontutor.com/"></a><a href="https://link.springer.com/book/10.1007/978-3-031-57148-0">Programming with Python for Engineers</a></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/nx2306_tutorial_video.7z">NX Tutorial</a></p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code">j19kw75</span></p>
<p>個人倉儲:<a href="https://github.com/mdecad2024/hw-41223226-0">https://github.com/mdecad2024/hw-41223226-0</a> <a href="https://github.com/mdecad2024/hw-41223226-0"></a></p>
<p>個人網站:<a href="https://mdecad2024.github.io/hw-41223226-0">https://mdecad2024.github.io/hw-41223226-0</a> </p>
<p>其他資訊</p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<p><img alt="" height="225" src="/images/螢幕擷取畫面 2024-09-20 145910.png" width="400"/></p>
<p><a href="https://github.com/mdecad2024/hw-41223226-0/blob/main/%E8%AA%B2%E5%89%8D%E6%AA%A2%E6%9F%A5.txt">課前檢查.txt</a></p>
<p><a href="https://github.com/mdecad2024/hw-41223226-0/blob/main/%E8%AA%B2%E7%A8%8B%E9%80%B2%E5%BA%A6%E8%87%AA%E6%AA%A2.txt">課程進度自檢.txt</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Run static server
import static
from gevent.pywsgi import WSGIServer

http_server = WSGIServer(('0.0.0.0', 8081), static.app)
http_server.serve_forever()</pre>
<p><a href="https://drive.google.com/file/d/1svNxFA22GxdeeMGtXf3KtZZvdzT8mmLr/view?usp=drive_link" title="CoppeliaSim">CoppeliaSim</a></p><h1>HW1</h1>
<p>Homework 1 (10%):</p>
<p style="padding-left: 30px;">利用 Solvespace 與 NX2312 建立 <a href="https://mde.tw/cad2024/content/Parts.html">Parts</a> 頁面中的零件</p>
<p style="padding-left: 30px;">其他<a href="http://229.cycu.org/part_modeling_projects.pdf">零件模擬練習</a></p>
<hr/>
<p style="padding-left: 30px;"><span>利用 Solvespace 繪製列表中零件的操作過程與說明影片如下:</span></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/fLzPJ-RoruA">國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之一</a></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1xrSj02kYyRiMIJ5rYqEfEwIHkZriemsW/view?usp=drive_link">41223226-hw-1.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-1.stl">41223226-hw-1.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="409" src="/images/hw-1.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/4ij2vDOyZKU">國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之二</a></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1JFEPzRgdS7nC5xA1YQQ3idMm72TVDtn8/view?usp=drive_link">41223226-hw-2.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-2.stl">41223226-hw-2.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="307" src="/images/41223226-hw-2.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1ThkvbizLmxzjxYkaIpi6ZKEA-43RP-jY/view?usp=drive_link">41223226-hw-3.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-3.stl">41223226-hw-3.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="288" src="/images/3.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1nUZniVAqvlPltf0xWh1koivy3k-rqLCS/view?usp=drive_link">41223226-hw-4.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-4.stl">41223226-hw-4.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="280" src="/images/5.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1aLYvCMh3C6Z984CyTk_5YU8yoxwMnqIr/view?usp=drive_link">41223226-hw-5.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-5.stl">41223226-hw-5.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="269" src="/images/6.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1yHUw8Pi9bdMA6gO9KfVe8jNeQbBe02An/view?usp=drive_link">41223226-hw-6.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-6.stl">41223226-hw-6.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="268" src="/images/7.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1GO_z89tmDUskAlMj8RT5U1kHsTM5dKhA/view?usp=sharing">41223226-hw-7.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-7.stl">41223226-hw-7.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="339" src="/images/8.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1JnOwbdOX6hSS4Av659zaNxR0FwSvpYgd/view?usp=drive_link">41223226-hw-8.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-8.stl">41223226-hw-8.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="284" src="/images/9.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1B8X_OC-g5RSNWdaWdKW0B6ss79UfFeGN/view?usp=drive_link">41223226-hw-9.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-9.stl">41223226-hw-9.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="317" src="/images/10.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/10HRn1bklCs4sySIuIxek75xnBq0LjyUd/view?usp=drive_link">41223226-hw-10.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-10.stl">41223226-hw-10.stl</a></p>
<p style="padding-left: 30px;"><img caption="false" height="400" src="/images/11.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1ZDh71FGQDO4m3ICSIeU01pwUzI5ql3b9/view?usp=drive_link">41223226-hw-11.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-11.stl">41223226-hw-11.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="288" src="/images/12.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1SL-YMy49VNye2Abx6osOkC_Ta5Vs6hPr/view?usp=drive_link">41223226-hw-12.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-12.stl">41223226-hw-12.stl</a></p>
<p style="padding-left: 30px;"><img alt="" height="350" src="/images/13.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1gcorzNlQ-_q_BdckvvaEldVm7xs_rT5-/view?usp=drive_link">41223226-hw-13.slvs</a></p>
<p style="padding-left: 30px;"><a href="https://mdecad2024.github.io/hw-41223226-0/cmsimde/static/viewstl.html?src=https://s104.cycu.org/~41223226/41223226-hw-13.stl">41223226-hw-13.stl</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/XTHkB5ca6bk">國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業(上半)</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/whbi7urOGlI">國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業(下半)</a></p>
<p>利用 NX2312 繪製列表中零件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之三</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之四</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">......</p>
<p>HW1 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW1 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW1 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW1_Exam</h2>
<p>從<a href="http://229.cycu.org/part_modeling_projects.pdf">零件模擬練習</a>中選出零件, 隨堂進行考試.</p>
<p>零件考試題目以 Solvespace 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p>零件考試題目以 NX2312 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<h3>w7</h3>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<div id="models"><canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv3" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv4" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv5" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv6" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv7" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv8" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv9" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv10" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv11" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv12" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv13" style="border: 1px solid;" width="400"></canvas></div>
<div style="width: 400px; height: 70px; border: 1px solid;">Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<script type="text/javascript">
var viewers = [];

function getOptions(){
    var mc = document.getElementById("mdlClr").value;
    var bc1 = document.getElementById("bckClr1").value;
    var bc2 = document.getElementById("bckClr2").value;
    var ren = document.getElementById("render").value;
    var def = document.getElementById("defini").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    var viewer = new JSC3D.Viewer(canvas);
    viewer.setParameter('SceneUrl', opt.SceneUrl);
    viewer.setParameter('InitRotationX', 0);
    viewer.setParameter('InitRotationY', 0);
    viewer.setParameter('InitRotationZ', 0);
    viewer.setParameter('ModelColor', opt.ModelColor);
    viewer.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer.setParameter('RenderMode', opt.RenderMode);
    viewer.setParameter('Definition', opt.Definition);
    viewer.init();
    viewer.update();
    viewers.push(viewer); // 保存 viewer 實例
}

function changeOption(strOpt,strValue){
    console.log("change " + strOpt + " to " + strValue);
    viewers.forEach(viewer => {
        viewer.setParameter(strOpt, strValue);
        viewer.init();
        viewer.update();
    });
}

function openByUrl(){
    var url = document.getElementById("url").value;
    var opt = getOptions();
    opt.SceneUrl = url;
    // 可以添加更多的 STL URL
    readSTLfile(opt, 'cv1'); // 為每個 canvas 調用
    readSTLfile(opt, 'cv2'); // 第二個 canvas
readSTLfile(opt, 'cv3');
readSTLfile(opt, 'cv4');
readSTLfile(opt, 'cv5');
readSTLfile(opt, 'cv6');
readSTLfile(opt, 'cv7');
readSTLfile(opt, 'cv8');
readSTLfile(opt, 'cv9');
readSTLfile(opt, 'cv10');
readSTLfile(opt, 'cv11');
readSTLfile(opt, 'cv12');
readSTLfile(opt, 'cv13');
}

function openByGet(){
    var urls = [
        "https://s104.cycu.org/~41223226/41223226-hw-1.stl",
        "https://s104.cycu.org/~41223226/41223226-hw-2.stl",
"https://s104.cycu.org/~41223226/41223226-hw-3.stl",
"https://s104.cycu.org/~41223226/41223226-hw-4.stl",
"https://s104.cycu.org/~41223226/41223226-hw-5.stl",
"https://s104.cycu.org/~41223226/41223226-hw-6.stl",
"https://s104.cycu.org/~41223226/41223226-hw-7.stl",
"https://s104.cycu.org/~41223226/41223226-hw-8.stl",
"https://s104.cycu.org/~41223226/41223226-hw-9.stl",
"https://s104.cycu.org/~41223226/41223226-hw-10.stl",
"https://s104.cycu.org/~41223226/41223226-hw-11.stl",
"https://s104.cycu.org/~41223226/41223226-hw-12.stl",
"https://s104.cycu.org/~41223226/41223226-hw-13.stl",
    ];
    var opt = getOptions();
    urls.forEach((url, index) => {
        opt.SceneUrl = url;
        readSTLfile(opt, 'cv' + (index + 1)); // 動態生成 canvas ID
    });
}

openByGet();
</script>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/pcQRKiRweKI" width="400"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4ij2vDOyZKU" width="400"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XTHkB5ca6bk" width="400"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/whbi7urOGlI" width="400"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7pzXlk01ZKM" width="400"></iframe></p>
<h3>w10</h3>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<div id="models"><canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas> <!-- 可以添加更多的 canvas --></div>
<div style="width: 400px; height: 70px; border: 1px solid;">Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<script type="text/javascript">
var viewers = [];

function getOptions(){
    var mc = document.getElementById("mdlClr").value;
    var bc1 = document.getElementById("bckClr1").value;
    var bc2 = document.getElementById("bckClr2").value;
    var ren = document.getElementById("render").value;
    var def = document.getElementById("defini").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    var viewer = new JSC3D.Viewer(canvas);
    viewer.setParameter('SceneUrl', opt.SceneUrl);
    viewer.setParameter('InitRotationX', 0);
    viewer.setParameter('InitRotationY', 0);
    viewer.setParameter('InitRotationZ', 0);
    viewer.setParameter('ModelColor', opt.ModelColor);
    viewer.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer.setParameter('RenderMode', opt.RenderMode);
    viewer.setParameter('Definition', opt.Definition);
    viewer.init();
    viewer.update();
    viewers.push(viewer); // 保存 viewer 實例
}

function changeOption(strOpt,strValue){
    console.log("change " + strOpt + " to " + strValue);
    viewers.forEach(viewer => {
        viewer.setParameter(strOpt, strValue);
        viewer.init();
        viewer.update();
    });
}

function openByUrl(){
    var url = document.getElementById("url").value;
    var opt = getOptions();
    opt.SceneUrl = url;
    // 可以添加更多的 STL URL
    readSTLfile(opt, 'cv1'); // 為每個 canvas 調用
    readSTLfile(opt, 'cv2'); // 第二個 canvas
}

function openByGet(){
    var urls = [
        "https://s104.cycu.org/~41223226/41223226-w10.stl",
        "https://s104.cycu.org/~41223226/41223226-w10.stl"
    ];
    var opt = getOptions();
    urls.forEach((url, index) => {
        opt.SceneUrl = url;
        readSTLfile(opt, 'cv' + (index + 1)); // 動態生成 canvas ID
    });
}

openByGet();
</script>
<p><a href="https://drive.google.com/file/d/1I3-PDeh12JuB0zG_-yheH9JMY4mR1pGV/view?usp=drive_link">41223226-w10.slvs</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/oq2BuVH2aYw" width="400"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/tktzjTU5A3c" width="400"></iframe></p>
<h3>w11_hw</h3>
<p>1.請各分組根據 <a href="https://mde.tw/cad2024/downloads/flipper_nx2312.7z">flipper_nx2312.7z</a><span> 中的零件尺寸, 分別採 Solvespace 與 NX2312 繪製以下零件:</span></p>
<p>Plongeur Batteur_sldprt.prt</p>
<p>Piece composite_sldprt.prt</p>
<p>Piece métalique gauche_sldprt.prt</p>
<p>Plastique Flipper_sldprt.prt</p>
<p>Support Bobine_sldprt.prt</p>
<p>Platine Batteur_sldprt.prt</p>
<p>Flipper_sldprt.prt</p>
<p><a href="https://mde.tw/cad2024/downloads/flipper_in_solvespace.7z">flipper_in_solvespace.7z</a></p>
<p><span>2.利用 Solvespace 與 NX2312 完成上列零件的組立</span></p>
<p><span>3.</span>請擇一將所完成的 Solvespace 或 NX2312 組立檔案轉入 CoppeliaSim, 並嘗試讓 <span>Flipper_sldprt.prt 以每秒 10 度的速度旋轉。</span></p>
<p>組員:</p>
<p><a href="https://mdecad2024.github.io/hw-RAY41223215">41223215_吳承叡</a>:負責使用nx2312繪製</p>
<p><a href="https://drive.google.com/file/d/1u5c8VlEYzlb-7SB_CR4gQJFw3hXApvRN/view?usp=drive_link">Support Bobine.prt</a></p>
<p><a href="https://drive.google.com/file/d/1hkK2edFymj-SgxaAcPxZ_r11yxk9jYEb/view?usp=sharing">Platine Batteur_sldprt.prt</a></p>
<p><a href="https://drive.google.com/file/d/1BLNud0qgg6EdsXMbVrwjr3kKs-Czz2Mi/view?usp=sharing">Piece métalique gauche_sldprt.prt</a></p>
<p><a href="https://mdecad2024.github.io/hw-41223226-0">41223226_林堃燁</a>:負責使用solvespace繪製<a href="https://drive.google.com/drive/folders/1ZPOmfbDCRE3EvdrnDN87PDiJgxyr3_nf?usp=drive_link">flipper</a>的全部零件</p>
<p>與<a href="https://drive.google.com/file/d/1D8bJsOqtH2oGsyAWKs6_PuhgDF5CPLXX/view?usp=drive_link">solvespace零件的組立</a>，並使用<a href="https://drive.google.com/file/d/1QOvg0w5ulZOhUNahOOZyOdkukZGgHgZt/view?usp=drive_link">solvespace組立檔案</a>拍攝<span>Flipper旋轉的<a href="https://youtu.be/73zid49hCcA">影片</a></span></p>
<p><a href="https://mdecad2024.github.io/hw-41223235">41223235_陳脩升</a>:<span>負責使用nx2312繪製</span></p>
<p><a href="https://drive.google.com/file/d/1UobadeCavE4-W2JonCIb6XDXB7Y9-QfA/view?usp=drive_link">Plongeur Batteur_sldprt.prt</a></p>
<p><a href="https://drive.google.com/file/d/1Syuz7pPIxga8QUNLrMlGGUaPJUKu6fXD/view?usp=drive_link">Piece composite_sldprt.prt</a></p>
<p><a href="https://drive.google.com/file/d/1oSmDEHzktWhRHtlEzMettWaZuM1KmHP3/view?usp=drive_link">Plastique Flipper_sldprt.prt</a></p>
<p><a href="https://drive.google.com/file/d/1CREqZKHizRm63Lw1IWMn80XFIrk8bB95/view?usp=drive_link">Flipper_sldprt.prt</a></p>
<p><span>(可點擊超連結下載已完成檔案)</span></p>
<p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
</p>
<div id="models"><canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv3" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv4" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv5" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv6" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv7" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv8" style="border: 1px solid;" width="400"></canvas></div>
<div style="width: 400px; height: 70px; border: 1px solid;">Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<p>
<script type="text/javascript">
var viewers = [];

function getOptions(){
    var mc = document.getElementById("mdlClr").value;
    var bc1 = document.getElementById("bckClr1").value;
    var bc2 = document.getElementById("bckClr2").value;
    var ren = document.getElementById("render").value;
    var def = document.getElementById("defini").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    var viewer = new JSC3D.Viewer(canvas);
    viewer.setParameter('SceneUrl', opt.SceneUrl);
    viewer.setParameter('InitRotationX', 0);
    viewer.setParameter('InitRotationY', 0);
    viewer.setParameter('InitRotationZ', 0);
    viewer.setParameter('ModelColor', opt.ModelColor);
    viewer.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer.setParameter('RenderMode', opt.RenderMode);
    viewer.setParameter('Definition', opt.Definition);
    viewer.init();
    viewer.update();
    viewers.push(viewer); // 保存 viewer 實例
}

function changeOption(strOpt,strValue){
    console.log("change " + strOpt + " to " + strValue);
    viewers.forEach(viewer => {
        viewer.setParameter(strOpt, strValue);
        viewer.init();
        viewer.update();
    });
}

function openByUrl(){
    var url = document.getElementById("url").value;
    var opt = getOptions();
    opt.SceneUrl = url;
    // 可以添加更多的 STL URL
    readSTLfile(opt, 'cv1'); // 為每個 canvas 調用
    readSTLfile(opt, 'cv2'); // 第二個 canvas
readSTLfile(opt, 'cv3');
readSTLfile(opt, 'cv4');
readSTLfile(opt, 'cv5');
readSTLfile(opt, 'cv6');
readSTLfile(opt, 'cv7');
readSTLfile(opt, 'cv8');
}

function openByGet(){
    var urls = [
        "https://s104.cycu.org/~41223226/41223226_flipper.stl",
        "https://s104.cycu.org/~41223226/41223226_left_metal_piece.stl",
"https://s104.cycu.org/~41223226/41223226_piece_composite.stl",
"https://s104.cycu.org/~41223226/41223226_plastic_flipper.stl",
"https://s104.cycu.org/~41223226/41223226_shaft.stl",
"https://s104.cycu.org/~41223226/41223226_slider.stl",
"https://s104.cycu.org/~41223226/41223226_solenoid.stl",
"https://s104.cycu.org/~41223226/41223226_flipper_shaft_plastic_assembly.stl",
    ];
    var opt = getOptions();
    urls.forEach((url, index) => {
        opt.SceneUrl = url;
        readSTLfile(opt, 'cv' + (index + 1)); // 動態生成 canvas ID
    });
}

openByGet();
</script>
</p>
<h4 class="style-scope ytd-watch-metadata"></h4>
<h5 class="style-scope ytd-watch-metadata"><a href="https://drive.google.com/drive/folders/1ZPOmfbDCRE3EvdrnDN87PDiJgxyr3_nf?usp=drive_link">41223226_flipper</a></h5>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/U6Hl7s_ERGc" width="400"></iframe></p>
<p><a href="https://drive.google.com/file/d/1QOvg0w5ulZOhUNahOOZyOdkukZGgHgZt/view?usp=drive_link">41223226_flipper.ttt</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/73zid49hCcA" width="400"></iframe></p>
<h3>w14</h3>
<p><span>下載 </span><a href="https://mde.tw/cad2024/downloads/pinball_cad2024.7z">pinball_cad2024.7z</a><span> 後, 在可攜系統 (</span><a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a><span>) 安裝 pyzmq、cbor 與 keyboard 模組後, 可以利用 Python 程式控制 Flipper 的旋轉角度. 操作過程如下:</span></p>
<p>利用 Solvespace 所繪製的 Flipper 進行組立的過程:</p>
<p>過程中所使用的檔案:<a href="https://drive.google.com/file/d/1D8bJsOqtH2oGsyAWKs6_PuhgDF5CPLXX/view?usp=drive_link">41223226_flipper.slvs</a></p>
<p>零件設定:<a href="https://drive.google.com/file/d/164Pj1h3UsnPZLOlz3FtDm8VtSAAVAkEQ/view?usp=drive_link">41223226.ttt</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xPBK0VqN7mc" width="400"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/eoQAlvrBURs" width="400"></iframe></p>
<p>控制程式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from coppeliasim_zmqremoteapi_client import RemoteAPIClient
import keyboard
 
# Connecting to the CoppeliaSim server
client = RemoteAPIClient('localhost', 23000)
 
print('Program started')
sim = client.getObject('sim')
 
# Get the handle for the slider (prismatic joint)
slider = sim.getObject('/Prismatic_joint')
 
# Starting the simulation
sim.startSimulation()
print('Simulation started')
 
# Main control loop
def main():
    # Keep running until simulation is stopped
    while True:
        if keyboard.is_pressed('w'):  # Move slider to -0.15 position
            print("w is pressed")
            sim.setJointTargetPosition(slider, -0.15)
         
        if keyboard.is_pressed('s'):  # Reset slider to the original position
            print("s is pressed")
            sim.setJointTargetPosition(slider, 0.0)  # Reset to the initial position
 
        if keyboard.is_pressed('q'):  # Stop the simulation when 'q' is pressed
            print("q is pressed - stopping simulation")
            sim.stopSimulation()
            break
 
# Start the main control loop
main()
</pre>
<p></p>
<h3>w11_ch</h3>
<p>請各分組根據 <a href="https://mde.tw/cad2024/downloads/flipper_nx2312.7z">flipper_nx2312.7z</a><span> 中的零件尺寸, 分別採 Solvespace 與 NX2312 繪製以下零件:</span></p>
<p>Plongeur Batteur_sldprt.prt</p>
<p>Piece composite_sldprt.prt</p>
<p>Piece métalique gauche_sldprt.prt</p>
<p>Plastique Flipper_sldprt.prt</p>
<p>Support Bobine_sldprt.prt</p>
<p>Platine Batteur_sldprt.prt</p>
<p>Flipper_sldprt.prt</p>
<p><a href="https://mde.tw/cad2024/downloads/flipper_in_solvespace.7z">flipper_in_solvespace.7z</a></p>
<p>組員:</p>
<p>41223215_吳承叡 負責使用nx2312繪製</p>
<p>Plastique Flipper_sldprt.prt</p>
<p>Support Bobine_sldprt.prt</p>
<p>Platine Batteur_sldprt.prt</p>
<p>Flipper_sldprt.prt</p>
<p>41223226_林堃燁 負責使用solvespace繪製</p>
<p><a href="https://mde.tw/cad2024/downloads/flipper_in_solvespace.7z">flipper_in_solvespace.7z</a>的全部零件</p>
<p>41223235_陳脩升 <span>負責使用nx2312繪製</span></p>
<p>Plongeur Batteur_sldprt.prt</p>
<p>Piece composite_sldprt.prt</p>
<p>Piece métalique gauche_sldprt.prt</p>
<p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
</p>
<div id="models"><canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv3" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv4" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv5" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv6" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv7" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv8" style="border: 1px solid;" width="400"></canvas></div>
<div style="width: 400px; height: 70px; border: 1px solid;">Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<p>
<script type="text/javascript">
var viewers = [];

function getOptions(){
    var mc = document.getElementById("mdlClr").value;
    var bc1 = document.getElementById("bckClr1").value;
    var bc2 = document.getElementById("bckClr2").value;
    var ren = document.getElementById("render").value;
    var def = document.getElementById("defini").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    var viewer = new JSC3D.Viewer(canvas);
    viewer.setParameter('SceneUrl', opt.SceneUrl);
    viewer.setParameter('InitRotationX', 0);
    viewer.setParameter('InitRotationY', 0);
    viewer.setParameter('InitRotationZ', 0);
    viewer.setParameter('ModelColor', opt.ModelColor);
    viewer.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer.setParameter('RenderMode', opt.RenderMode);
    viewer.setParameter('Definition', opt.Definition);
    viewer.init();
    viewer.update();
    viewers.push(viewer); // 保存 viewer 實例
}

function changeOption(strOpt,strValue){
    console.log("change " + strOpt + " to " + strValue);
    viewers.forEach(viewer => {
        viewer.setParameter(strOpt, strValue);
        viewer.init();
        viewer.update();
    });
}

function openByUrl(){
    var url = document.getElementById("url").value;
    var opt = getOptions();
    opt.SceneUrl = url;
    // 可以添加更多的 STL URL
    readSTLfile(opt, 'cv1'); // 為每個 canvas 調用
    readSTLfile(opt, 'cv2'); // 第二個 canvas
readSTLfile(opt, 'cv3');
readSTLfile(opt, 'cv4');
readSTLfile(opt, 'cv5');
readSTLfile(opt, 'cv6');
readSTLfile(opt, 'cv7');
readSTLfile(opt, 'cv8');
}

function openByGet(){
    var urls = [
        "https://s104.cycu.org/~41223226/41223226_flipper.stl",
        "https://s104.cycu.org/~41223226/41223226_left_metal_piece.stl",
"https://s104.cycu.org/~41223226/41223226_piece_composite.stl",
"https://s104.cycu.org/~41223226/41223226_plastic_flipper.stl",
"https://s104.cycu.org/~41223226/41223226_shaft.stl",
"https://s104.cycu.org/~41223226/41223226_slider.stl",
"https://s104.cycu.org/~41223226/41223226_solenoid.stl",
"https://s104.cycu.org/~41223226/41223226_flipper_shaft_plastic_assembly.stl",
    ];
    var opt = getOptions();
    urls.forEach((url, index) => {
        opt.SceneUrl = url;
        readSTLfile(opt, 'cv' + (index + 1)); // 動態生成 canvas ID
    });
}

openByGet();
</script>
</p>
<h4 class="style-scope ytd-watch-metadata"></h4>
<h5 class="style-scope ytd-watch-metadata"><a href="https://drive.google.com/drive/folders/1ZPOmfbDCRE3EvdrnDN87PDiJgxyr3_nf?usp=drive_link">41223226_flipper</a></h5>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/U6Hl7s_ERGc" width="400"></iframe></p>
<h3>w15</h3>
<p>基礎功能建設影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kqpgZO6r5ro" width="400"></iframe></p>
<p>控制程式</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from coppeliasim_zmqremoteapi_client import RemoteAPIClient
import keyboard

# Connecting to the CoppeliaSim server
client = RemoteAPIClient('localhost', 23000)

print('Program started')
sim = client.getObject('sim')

# Get the handle for the slider (prismatic joint)
cw= sim.getObject('/cw_joint')
ccw= sim.getObject('/ccw_joint')

# Starting the simulation
sim.startSimulation()
print('Simulation started')

# Main control loop
def main():
    # Keep running until simulation is stopped
    while True:
        if keyboard.is_pressed('w'):  # Move slider to -0.15 position
            print("w is pressed")
            sim.setJointTargetPosition(cw, -0.25)
        
        if keyboard.is_pressed('s'):  # Reset slider to the original position
            print("s is pressed")
            sim.setJointTargetPosition(cw, 0.0)  # Reset to the initial position
            
        if keyboard.is_pressed('p'):  # Move slider to -0.15 position
            print("p is pressed")
            sim.setJointTargetPosition(ccw, 2.5)
        
        if keyboard.is_pressed('l'):  # Reset slider to the original position
            print("l is pressed")
            sim.setJointTargetPosition(ccw, 0.0)  # Reset to the initial position
            
        if keyboard.is_pressed('t'):  # Stop the simulation when 't' is pressed
            print("t is pressed - stopping simulation")
            sim.stopSimulation()
            break

# Start the main control loop
main()</pre>
<p>得分板控制程式</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    sim = require('sim')

    -- Get handles for all sensors (assuming the sensors are named 0, 1, 2, ..., 7)
    sensors = {}
    for i = 0, 7 do
        local handle = sim.getObject('/' .. i) -- ???????? 0?1?2 ?
        if handle ~= -1 then
            sensors[#sensors + 1] = handle
        else
            sim.addLog(sim.verbosity_errors, 'Sensor /' .. i .. ' not found.')
        end
    end

    -- Get the ball object
    ball = sim.getObject('/ball')
    if ball == -1 then
        sim.addLog(sim.verbosity_errors, 'Ball object not found. Check its name in the scene.')
    end

    -- Get handles for all segments for all 7 displays (0-6)
    segments = {}
    for i = 0, 6 do
        segments[i] = {
            a = sim.getObject('/segment[' .. i .. ']/a'),
            b = sim.getObject('/segment[' .. i .. ']/b'),
            c = sim.getObject('/segment[' .. i .. ']/c'),
            d = sim.getObject('/segment[' .. i .. ']/d'),
            e = sim.getObject('/segment[' .. i .. ']/e'),
            f = sim.getObject('/segment[' .. i .. ']/f'),
            g = sim.getObject('/segment[' .. i .. ']/g')
        }
    end

    -- Define segment patterns for numbers 0-9
    number_patterns = {
        [0] = {a=1, b=1, c=1, d=1, e=1, f=1, g=0},
        [1] = {a=0, b=1, c=1, d=0, e=0, f=0, g=0},
        [2] = {a=1, b=1, c=0, d=1, e=1, f=0, g=1},
        [3] = {a=1, b=1, c=1, d=1, e=0, f=0, g=1},
        [4] = {a=0, b=1, c=1, d=0, e=0, f=1, g=1},
        [5] = {a=1, b=0, c=1, d=1, e=0, f=1, g=1},
        [6] = {a=1, b=0, c=1, d=1, e=1, f=1, g=1},
        [7] = {a=1, b=1, c=1, d=0, e=0, f=0, g=0},
        [8] = {a=1, b=1, c=1, d=1, e=1, f=1, g=1},
        [9] = {a=1, b=1, c=1, d=1, e=0, f=1, g=1}
    }

    -- Initialize counter and sensor state
    counter = 0
    last_sensor_state = {}

    -- Define colors
    background = {0, 0, 0}
    led_color = {1, 0, 0}

    -- Initialize all segments to white
    initializeDisplays()

    -- Initialize last sensor states
    for i = 1, #sensors do
        last_sensor_state[i] = false
    end
end

function initializeDisplays()
    -- Set all segments of all displays to white
    for display_index = 0, 6 do
        for _, segment_handle in pairs(segments[display_index]) do
            sim.setShapeColor(segment_handle, nil, sim.colorcomponent_ambient_diffuse, background)
        end
    end
end

function displayDigit(number, display_index)
    -- Ensure number is within 0-9 range
    number = number % 10

    -- Set segments according to pattern
    local pattern = number_patterns[number]
    for segment_name, segment_handle in pairs(segments[display_index]) do
        if pattern[segment_name] == 1 then
            sim.setShapeColor(segment_handle, nil, sim.colorcomponent_ambient_diffuse, led_color)
        else
            sim.setShapeColor(segment_handle, nil, sim.colorcomponent_ambient_diffuse, background)
        end
    end
end

function showNumber(n)
    -- Ensure number is non-negative
    n = math.max(0, n)

    -- Maximum displayable number (9999999)
    n = math.min(n, 9999999)

    -- Display each digit
    for i = 0, 6 do
        local digit = math.floor(n / math.pow(10, i)) % 10
        displayDigit(digit, i)
    end
end

function sysCall_actuation()
    -- Loop through each sensor and check its state
    for i = 1, #sensors do
        local sensor = sensors[i]

        -- Ensure sensor is valid
        if sensor ~= nil and sensor ~= -1 then
            if ball ~= nil and ball ~= -1 then
                local result = sim.checkProximitySensor(sensor, ball)
                local sensor_active = (result &gt; 0)

                -- Increment counter on rising edge (sensor just activated)
                if sensor_active and not last_sensor_state[i] then
                    counter = counter + 100  -- You can adjust this logic
                    showNumber(counter)  -- Show updated count on the display
                    sim.addLog(sim.verbosity_scriptinfos, "Sensor " .. i .. " detected the ball.")
                end

                -- Update last sensor state
                last_sensor_state[i] = sensor_active
            else
                sim.addLog(sim.verbosity_errors, 'Ball object is invalid or not found.')
            end
        else
            sim.addLog(sim.verbosity_errors, 'Invalid sensor handle at index ' .. i)
        end
    end
end

function sysCall_sensing()
    -- Put your sensing code here if needed
end

function sysCall_cleanup()
    -- Reset all segments to white on cleanup
    initializeDisplays()
end</pre>
<p>相關檔案<a href="https://mde.tw/cad2024/downloads/w15.7z">w15.7z</a></p>
<p><a href="https://drive.google.com/file/d/16w982AUnc4AsozvML-cJVYVic6l8OQ88/view?usp=drive_link">41223226_w15.ttt</a></p>
<p>障礙物建設影片</p>
<p><a href="https://mdecad2024.github.io/hw-41223235/content/w15.html">41223235</a></p><h1>HW2</h1>
<p>Homework 2 (10%):</p>
<p style="padding-left: 30px;">利用 Solvespace 與 NX 建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件</p>
<hr/>
<p>利用 Solvespace 繪製 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業二之一</p>
<p style="padding-left: 30px;">所完成的零組件檔案下載</p>
<p>利用 NX2312 繪製 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業二之二</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p>HW2 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW2 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW2 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW2_Exam</h2>
<p>與 HW2 內容相近的組立件題目, 隨堂進行考試.</p>
<p>零件與組立件考試題目以 Solvespace 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件與組立件檔案下載</p>
<p>零件與組立件考試題目以 NX 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件與組立件檔案下載</p>
<h3>w16_exam1</h3>
<p><span>題目 (</span><span>Solvespace 零件繪圖</span><span>): 請以 </span><a href="https://mde.tw/cad2024_hw/downloads/hw4_exam_copsim_slvs_nx2312.7z">hw4_exam_copsim_slvs_nx2312.7z</a><span> 中的 kicker_assembly.prt 尺寸作為依據, 將所量測的各部尺寸其小數點後兩位數, 改為自己學號的最後兩碼, (例如: 支架圓孔直徑為 12.65mm, 若學號最後兩碼為 47, 則將此圓孔直徑設為 12.47mm, 若學號最後兩碼為 01, 則將此圓孔直徑設為 12.01mm, 其他尺寸依此類推), 利用 Solvespace 繪製零件後進行組立, 並將過程錄製為操作影片,  請以"國立虎尾科技大學機械設計工程系 - 電腦輔助設計與實習 - w16_exam1: 學號" 作為影片標題, 並在影片說明欄位中敘述此一影片的繪製流程與心得, 完成後請將影片上傳至個人 Youtube 帳號中, 並嵌入個人網站中的 "w16_exam1" 頁面。</span></p>
<p><span></span></p>
<p><span></span></p>
<p><a href="https://drive.google.com/file/d/1Rowi79QAYdYDrmRPGfNUJYwnhlHUafAu/view?usp=drive_link">41223226_w16_exam1.7z</a></p>
<p><a href="https://docs.google.com/spreadsheets/d/1t9X0ogCnLBFq6Dv2zB_YdqKjFvhGqsSL/edit?usp=drive_link&amp;ouid=111559088534208205873&amp;rtpof=true&amp;sd=true">41223226_w16_exam_尺寸表格</a></p>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<div id="models"><canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv3" style="border: 1px solid;" width="400"></canvas> <!-- 可以添加更多的 canvas --></div>
<div style="width: 400px; height: 70px; border: 1px solid;">Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<script type="text/javascript">
var viewers = [];

function getOptions(){
    var mc = document.getElementById("mdlClr").value;
    var bc1 = document.getElementById("bckClr1").value;
    var bc2 = document.getElementById("bckClr2").value;
    var ren = document.getElementById("render").value;
    var def = document.getElementById("defini").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    var viewer = new JSC3D.Viewer(canvas);
    viewer.setParameter('SceneUrl', opt.SceneUrl);
    viewer.setParameter('InitRotationX', 0);
    viewer.setParameter('InitRotationY', 0);
    viewer.setParameter('InitRotationZ', 0);
    viewer.setParameter('ModelColor', opt.ModelColor);
    viewer.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer.setParameter('RenderMode', opt.RenderMode);
    viewer.setParameter('Definition', opt.Definition);
    viewer.init();
    viewer.update();
    viewers.push(viewer); // 保存 viewer 實例
}

function changeOption(strOpt,strValue){
    console.log("change " + strOpt + " to " + strValue);
    viewers.forEach(viewer => {
        viewer.setParameter(strOpt, strValue);
        viewer.init();
        viewer.update();
    });
}

function openByUrl(){
    var url = document.getElementById("url").value;
    var opt = getOptions();
    opt.SceneUrl = url;
    // 可以添加更多的 STL URL
    readSTLfile(opt, 'cv1'); // 為每個 canvas 調用
    readSTLfile(opt, 'cv2'); // 第二個 canvas
readSTLfile(opt, 'cv3');
}

function openByGet(){
    var urls = [
        "https://s104.cycu.org/~41223226/41223226_w16-1.stl",
        "https://s104.cycu.org/~41223226/41223226_w16-2.stl",
        "https://s104.cycu.org/~41223226/41223226_w16-3.stl"
    ];
    var opt = getOptions();
    urls.forEach((url, index) => {
        opt.SceneUrl = url;
        readSTLfile(opt, 'cv' + (index + 1)); // 動態生成 canvas ID
    });
}

openByGet();
</script>
<p></p>
<p></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/tJyuAi4J-Sc" width="400"></iframe></span></p>
<h1>HW3</h1>
<p>Homework 3 (20%):</p>
<p style="padding-left: 30px;">建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 控制系統設計模擬場景</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/Balance_On_Wheels">https://github.com/mdecycu/Balance_On_Wheels</a></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/balance_on_wheels.png" width="400"/></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/Balance_on_wheels_scene.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cad2024/downloads/Balance_on_wheels_nx2312.7z">Balance_on_wheels_nx2312.7z</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cad2024/downloads/Balance_on_Wheel_scene.7z">Balance_on_Wheel_scene.7z</a></p>
<h2>HW3_Exam</h2>
<p>與 HW3 內容相近的模擬場景題目, 隨堂進行考試.</p>
<p>建立模擬場景操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的模擬場景與控制程式檔案下載</p>
<hr/>
<p>利用 CoppeliaSim 建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 控制系統設計模擬場景的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業三</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的場景與控制程式檔案下載</p>
<p>HW3 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW3 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW3 自評分數輸入 cad2024 自評表單中.</p>
<h3>w16_exam2</h3>
<p><span>題目 (NX2312</span><span> 零件繪圖</span><span>): 請以 </span><a href="https://mde.tw/cad2024_hw/downloads/hw4_exam_copsim_slvs_nx2312.7z">hw4_exam_copsim_slvs_nx2312.7z</a><span> 中的 kicker_assembly.prt 尺寸作為依據, 將所量測的各部尺寸其小數點後兩位數, 改為自己學號的最後兩碼, (例如: 支架圓孔直徑為 12.65mm, 若學號最後兩碼為 47, 則將此圓孔直徑設為 12.47mm, 若學號最後兩碼為 01, 則將此圓孔直徑設為 12.01mm, 其他尺寸依此類推), 利用 NX2312 繪製零件後進行組立, 並將過程錄製為操作影片,  請以"國立虎尾科技大學機械設計工程系 - 電腦輔助設計與實習 - w16_exam2: 學號" 作為影片標題, 並在影片說明欄位中敘述此一影片的繪製流程與心得, 完成後請將影片上傳至個人 Youtube 帳號中, 並嵌入個人網站中的 "w16_exam2" 頁面。</span></p>
<p><span></span></p>
<p><span></span></p>
<p><a href="https://drive.google.com/file/d/1UCiPbhA-rgI58nHe8ehLeHEtY4JYbpRQ/view?usp=drive_link">41223226_w16_exam2.7z</a></p>
<p><a href="https://docs.google.com/spreadsheets/d/1t9X0ogCnLBFq6Dv2zB_YdqKjFvhGqsSL/edit?usp=drive_link&amp;ouid=111559088534208205873&amp;rtpof=true&amp;sd=true">41223226_w16_exam_尺寸表格</a></p>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<div id="models"><canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas> <canvas height="300" id="cv3" style="border: 1px solid;" width="400"></canvas> <!-- 可以添加更多的 canvas --></div>
<div style="width: 400px; height: 70px; border: 1px solid;">Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<script type="text/javascript">
var viewers = [];

function getOptions(){
    var mc = document.getElementById("mdlClr").value;
    var bc1 = document.getElementById("bckClr1").value;
    var bc2 = document.getElementById("bckClr2").value;
    var ren = document.getElementById("render").value;
    var def = document.getElementById("defini").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    var viewer = new JSC3D.Viewer(canvas);
    viewer.setParameter('SceneUrl', opt.SceneUrl);
    viewer.setParameter('InitRotationX', 0);
    viewer.setParameter('InitRotationY', 0);
    viewer.setParameter('InitRotationZ', 0);
    viewer.setParameter('ModelColor', opt.ModelColor);
    viewer.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer.setParameter('RenderMode', opt.RenderMode);
    viewer.setParameter('Definition', opt.Definition);
    viewer.init();
    viewer.update();
    viewers.push(viewer); // 保存 viewer 實例
}

function changeOption(strOpt,strValue){
    console.log("change " + strOpt + " to " + strValue);
    viewers.forEach(viewer => {
        viewer.setParameter(strOpt, strValue);
        viewer.init();
        viewer.update();
    });
}

function openByUrl(){
    var url = document.getElementById("url").value;
    var opt = getOptions();
    opt.SceneUrl = url;
    // 可以添加更多的 STL URL
    readSTLfile(opt, 'cv1'); // 為每個 canvas 調用
    readSTLfile(opt, 'cv2'); // 第二個 canvas
readSTLfile(opt, 'cv3');
}

function openByGet(){
    var urls = [
        "https://s104.cycu.org/~41223226/41223226_w16-1.stl",
        "https://s104.cycu.org/~41223226/41223226_w16-2.stl",
        "https://s104.cycu.org/~41223226/41223226_w16-3.stl"
    ];
    var opt = getOptions();
    urls.forEach((url, index) => {
        opt.SceneUrl = url;
        readSTLfile(opt, 'cv' + (index + 1)); // 動態生成 canvas ID
    });
}

openByGet();
</script>
<p></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/qLwZzBNpUNk" width="400"></iframe></p>
<h1>HW4</h1>
<p>Homework 4 (20%):</p>
<p style="padding-left: 30px;">建立 <a href="https://mde.tw/cad2024/content/Quadruped.html">Dingo 機器狗</a>控制系統設計模擬場景</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/DingoQuadruped">https://github.com/mdecycu/DingoQuadruped</a></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/DINGO_QUADRUPED_CAD.7z">DINGO_QUADRUPED_CAD.7z</a></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/dingo.png" width="400"/></p>
<hr/>
<p>利用 CoppeliaSim 建立 <a href="https://mde.tw/cad2024/content/Quadruped.html">Dingo 機器狗</a>控制系統設計模擬場景的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業四</p>
<p style="padding-left: 30px;">所完成的場景與控制程式檔案下載</p>
<p>HW4 執行心得:</p>
<p style="padding-left: 30px;">....</p>
<p>HW4 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW4 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW4_Exam</h2>
<p>與 HW4 內容相近的模擬場景題目, 隨堂進行考試.</p>
<p>建立模擬場景操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的模擬場景與控制程式檔案下載</p>
<h3>w16_exam3</h3>
<p><span>題目 (</span><span>發球機構場景與控制程式</span><span>): 請將您所完成的 w16_exam1 或 w16_exam2 組立檔案, 轉入 CoppeliaSim 4.7 rev4 中, 利用 ZMQ RemoteAPI Python 控制程式執行彈珠台發球機構, 並將過程錄製為操作影片,  請以"國立虎尾科技大學機械設計工程系 - 電腦輔助設計與實習 - w16_exam3: 學號" 作為影片標題, 並在影片說明欄位中敘述此一影片的繪製流程與心得, 完成後請將影片上傳至個人 Youtube 帳號中, 並嵌入個人網站中的 "w16_exam3" 頁面。</span></p>
<p><span></span></p>
<p><span></span></p>
<p><a href="https://drive.google.com/file/d/1p56F1MD_xGl3lscVDxl7KRxtYyBx3xNf/view?usp=drive_link">41223226_w16_exam3.7z</a></p>
<p><span></span></p>
<p><span></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/uttPrYaMud0" width="400"></iframe></span></p>
<p><span></span></p>
<p><span>Python ZMQ remote API 控制程式如下:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from coppeliasim_zmqremoteapi_client import RemoteAPIClient
import keyboard
 
# Connecting to the CoppeliaSim server
client = RemoteAPIClient('localhost', 23000)
 
print('Program started')
sim = client.getObject('sim')
 
# Get the handle for the slider (prismatic joint)
slider = sim.getObject('/Prismatic_joint')
 
# Starting the simulation
sim.startSimulation()
print('Simulation started')
 
# Main control loop
def main():
    # Keep running until simulation is stopped
    while True:
        if keyboard.is_pressed('w'):  # Move slider to -0.15 position
            print("w is pressed")
            sim.setJointTargetPosition(slider, -0.15)
         
        if keyboard.is_pressed('s'):  # Reset slider to the original position
            print("s is pressed")
            sim.setJointTargetPosition(slider, 0.0)  # Reset to the initial position
 
        if keyboard.is_pressed('q'):  # Stop the simulation when 'q' is pressed
            print("q is pressed - stopping simulation")
            sim.stopSimulation()
            break
 
# Start the main control loop
main()</pre>
<p></p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (30%)</p>
<p>期末口頭專題報告影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hSUA3On0VDQ" width="400"></iframe></p>
<p>期末書面專題報告檔案 (pdf):</p>
<p><a href="https://mdecad2024.github.io/hw-RAY41223215/downloads/%E7%B0%A1%E5%A0%B12.pdf">報告檔案</a></p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p>在這學期的《電腦輔助設計與實習》課程中，我學習了多種設計與模擬工具，包括 SolveSpace、NX 和 CoppeliaSim。這些工具讓我對機械設計與自動化系統的開發有了更深刻的認識與應用能力。</p>
<p>首先，SolveSpace 是一個輕量級的 3D 建模軟體，雖然功能不如大型軟體全面，但其簡單易用的特性，讓我能快速掌握草圖繪製與約束條件的操作。透過 SolveSpace，我理解了約束在設計中的重要性。此外，老師在教學過程中強調了「可攜」的概念，例如透過 USB 隨時攜帶工具，不受限於固定電腦環境，這讓我們在課堂外也能輕鬆練習，效率大大提升。</p>
<p>相比之下，NX 作為一款專業的 CAD/CAM/CAE 工具，功能更為強大，尤其在機構設計與模具開發上展現出色的能力。在課程中，我熟悉了 NX 的基本操作，而在課餘時間，我利用 NX 設計了鍵盤外殼的模具，這讓我更加了解 3D 建模的細節處理，以及模具設計對加工工序的影響。</p>
<p>此外，CoppeliaSim 是一個多功能的機器人模擬平台。在這部分學習中，我們完成了彈珠台的模擬作動，結合控制程式實現了機械結構的精確操控。透過這些實驗，我對機械系統的運作與整合有了更深入的理解，也對模擬技術如何提高設計驗證效率有了新的認識。</p>
<p>整體來說，這門課程讓我從基礎的設計軟體操作到進階的機械系統模擬，全面提升了實作能力與專業知識。我深刻體會到，將理論與實際結合的重要性，也更加明白如何使用工具解決設計中的各類問題。未來，我希望能將這些所學應用到更多實際專案中，為自己的專業能力打下堅實的基礎。</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cad2024 自評表單中.</p>